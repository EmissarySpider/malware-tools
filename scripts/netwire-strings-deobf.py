# NetWire RAT string deobfuscator; credits to the Fidelis Threat Research Team
# Source: https://fidelissecurity.com/threatgeek/threat-intelligence/netwire-rat/

key = '_BqwHaF8TkKDMfOzQASx4VuXdZibUIeylJWhj0m5o2ErLt6vGRN9sY1n3Ppc7g-C'
obf_str = '' #Put your obfuscated string here, for example: 'U4R-55sEd5Xj90WfZPWR84n_W0PQ00dR5u6d0' or "MT_qUDrj\F4Y0W6W85\DY542dMd5Qs\XR65CiidSPWlsWRdR56\%6"
#obfuscated string
Deofb_str = ''
for letter in obf_str:
    index1 = key.find(letter) #give index number of each char that is in str obf_str
    k_len = len(key) #find length
    index1_plus_6 = [index1 + 6] #takes index number that index1 is currently at and adds 6
    index = index1_plus_6[0] #stores what is currently at key plus 6(stores line 9)
    if index > k_len: # do this if index out of range
        out_of_range_val = int(index) & int('3f', 16 ) #index out of range check
        k_key = key[out_of_range_val]
        Deofb_str += k_key
        #print(Deofb_str.join(k_key))
    else: # do this if index in range
        if letter == '\\': #skip \
            Deofb_str += letter
        elif letter == '.': # skip periods
            Deofb_str += letter
        elif letter == ' ': #skip space
            Deofb_str += letter
        elif letter == '(': #skip parens
            Deofb_str += letter
        elif letter == ')': #skip parens2
            Deofb_str += letter
        elif letter == '[': #skip brace
            Deofb_str += letter
        elif letter == ']': #skip brace2
            Deofb_str += letter
        else:
            decoded = key[index1 + 6] #add 6 to index1 and show the letter
            Deofb_str += decoded
print(Deofb_str)